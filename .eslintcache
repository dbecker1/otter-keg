[{"/Users/dbecker/Developer/otter-keg/src/index.tsx":"1","/Users/dbecker/Developer/otter-keg/src/components/otter-keg/OtterKeg.tsx":"2","/Users/dbecker/Developer/otter-keg/src/components/otter-keg/board/UserBoard.tsx":"3","/Users/dbecker/Developer/otter-keg/src/components/otter-keg/OtterKegMain.tsx":"4","/Users/dbecker/Developer/otter-keg/src/state/OtterKegState.ts":"5","/Users/dbecker/Developer/otter-keg/src/App.tsx":"6","/Users/dbecker/Developer/otter-keg/src/utils/untappedUtils.ts":"7","/Users/dbecker/Developer/otter-keg/src/components/otter-keg/board/Board.tsx":"8","/Users/dbecker/Developer/otter-keg/src/components/otter-keg/OtterKegHeader.tsx":"9","/Users/dbecker/Developer/otter-keg/src/state/ActiveKegsSlice.ts":"10","/Users/dbecker/Developer/otter-keg/src/components/otter-keg/PourOverlay.tsx":"11"},{"size":1421,"mtime":1609283650444,"results":"12","hashOfConfig":"13"},{"size":508,"mtime":1608839911370,"results":"14","hashOfConfig":"13"},{"size":640,"mtime":1608839912015,"results":"15","hashOfConfig":"13"},{"size":1846,"mtime":1609277207250,"results":"16","hashOfConfig":"13"},{"size":769,"mtime":1609274662783,"results":"17","hashOfConfig":"13"},{"size":1445,"mtime":1609274759062,"results":"18","hashOfConfig":"13"},{"size":3388,"mtime":1609261292880,"results":"19","hashOfConfig":"13"},{"size":857,"mtime":1608767475980,"results":"20","hashOfConfig":"13"},{"size":222,"mtime":1608839910749,"results":"21","hashOfConfig":"13"},{"size":450,"mtime":1609275002085,"results":"22","hashOfConfig":"13"},{"size":2546,"mtime":1609290181703,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"2y7tw5",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/dbecker/Developer/otter-keg/src/index.tsx",[],"/Users/dbecker/Developer/otter-keg/src/components/otter-keg/OtterKeg.tsx",[],"/Users/dbecker/Developer/otter-keg/src/components/otter-keg/board/UserBoard.tsx",[],"/Users/dbecker/Developer/otter-keg/src/components/otter-keg/OtterKegMain.tsx",[],"/Users/dbecker/Developer/otter-keg/src/state/OtterKegState.ts",[],"/Users/dbecker/Developer/otter-keg/src/App.tsx",["47"],"import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { populate, useFirebaseConnect } from 'react-redux-firebase';\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport useDeepCompareEffect from 'use-deep-compare-effect';\nimport {OtterKeg }from \"./components/otter-keg/OtterKeg\";\nimport { setActiveKegs } from './state/ActiveKegsSlice';\nimport { OtterKegState, useOtterKegDispatch } from './state/OtterKegState';\nimport { populateKegDetails } from './utils/untappedUtils';\n\nfunction App() {\n    const populates = [{ child: \"beerId\", root: \"beers\"}];\n\n    useFirebaseConnect([{\n        path: \"kegs\", \n        populates, \n        queryParams: [ 'orderByChild=isActive', 'equalTo=true' ],\n        storeAs: \"activeKegs\"\n    }]);\n    let kegs: Object = useSelector((state: OtterKegState) => populate(state.firebase, \"activeKegs\", populates)) || {};\n    let dispatch = useOtterKegDispatch();\n    useDeepCompareEffect(() => {\n        populateKegDetails(kegs as any).then((kegsWithDetails) => {\n            dispatch(setActiveKegs(kegsWithDetails));\n        }).catch(e => {\n            console.log(\"Error loading beer details\", e)\n        })\n    }, [kegs])\n    return (\n        <BrowserRouter>\n            <Route path={\"/admin\"} render={() => {return <p>Admin</p>}} />\n            <Route path={\"/view\"}>\n                <OtterKeg />\n            </Route>\n        </BrowserRouter>\n    )\n}\n\nexport default App;\n","/Users/dbecker/Developer/otter-keg/src/utils/untappedUtils.ts",[],"/Users/dbecker/Developer/otter-keg/src/components/otter-keg/board/Board.tsx",[],"/Users/dbecker/Developer/otter-keg/src/components/otter-keg/OtterKegHeader.tsx",[],"/Users/dbecker/Developer/otter-keg/src/state/ActiveKegsSlice.ts",[],"/Users/dbecker/Developer/otter-keg/src/components/otter-keg/PourOverlay.tsx",[],{"ruleId":"48","severity":1,"message":"49","line":2,"column":10,"nodeType":"50","messageId":"51","endLine":2,"endColumn":21},"@typescript-eslint/no-unused-vars","'useDispatch' is defined but never used.","Identifier","unusedVar"]